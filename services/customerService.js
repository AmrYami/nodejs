//Generated By Amr Awwad
const CustomerModel = require("../models/customerModels");
const asyncHandler = require("express-async-handler");
const ApiErors = require("../utils/ApiErors");
const stripe = require("stripe")(process.env.STRIPE_TOKEN);

exports.createCustomer = asyncHandler(async (req, res) => {
  const name = req.body.name;
  const phone = req.body.phone;
  const email = req.body.email;
  const currency = req.body.currency;

  const customerStripe = await stripe.customers.create({
    email: email,
    phone: phone,
    name: name,
    // currency: currency,
  });

  const customer_id = customerStripe.id;

  const customer = await CustomerModel.create({
    name,
    phone,
    email,
    currency,
    customer_id,
  });
  res.status(201).json({ data: customer });
});

exports.getCustomers = asyncHandler(async (req, res) => {
  const page = req.query.page * 1 || 1;
  const limit = req.query.limit * 1 || 5;
  const skip = (page - 1) * limit;
  const customers = await CustomerModel.find({}).skip(skip).limit(limit);
  res.status(200).json({ count: customers.length, data: customers });
});

exports.getCustomer = asyncHandler(async (req, res, next) => {
  const { id } = req.params;
  // const customer = await CustomerModel.findById(id);
  const customer = await stripe.customers.retrieve(id);
  if (!customer) {
    return next(new ApiErors(`not found this ${id}`, 404));
  }
  res.status(200).json({ data: customer });
});

exports.updateCustomer = asyncHandler(async (req, res, next) => {
  const { id } = req.params;
  const { name } = req.body;
  const customer = await CustomerModel.findOneAndUpdate(
    { _id: id },
    { name, slug: slugify(name) },
    { new: true }
  );
  if (!customer) {
    return next(new ApiErors(`not found this ${id}`, 404));
  }
  res.status(200).json({ data: customer });
});

exports.deleteCustomer = asyncHandler(async (req, res, next) => {
  const { id } = req.params;
  const customer = await CustomerModel.findByIdAndDelete(id);
  if (!customer) {
    return next(new ApiErors(`not found this ${id}`, 404));
  }
  res.status(204).send();
});
