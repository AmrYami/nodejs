//Generated By Amr Awwad
const asyncHandler = require("express-async-handler");
const ApiErors = require("../utils/ApiErors");
const PlanModel = require("../models/PlanModel");
const stripe = require("stripe")(process.env.STRIPE_TOKEN);


exports.createPlan = asyncHandler(async (req, res) => {
  var param = {};
    param.nickname = req.body.nickname;
    param.amount = req.body.amount;
    param.interval = req.body.interval;
    param.product = req.body.product;
    param.currency = req.body.currency;

    const plan = await stripe.plans.create(param);
    
  //  const plan = await stripe.tokens.create(param);

   param.stripId = plan.id;
  const planMO = await PlanModel.create(param);


  res.status(201).json({ data: plan });
});

exports.getPlans = asyncHandler(async (req, res) => {
  const page = req.query.page * 1 || 1;
  const limit = req.query.limit * 1 || 5;
  const skip = (page - 1) * limit;
  const plans = await PlanModel.find({}).skip(skip).limit(limit);
  res.status(200).json({ count: plans.length, data: plans });
});

exports.getPlan = asyncHandler(async (req, res, next) => {
  const { id } = req.params;
  // const plan = await PlanModel.findById(id);
  const plan = await stripe.plans.retrieve(id);
  if (!plan) {
    return next(new ApiErors(`not found this ${id}`, 404));
  }
  res.status(200).json({ data: plan });
});

exports.updatePlan = asyncHandler(async (req, res, next) => {
  const { id } = req.params;
  let param = {};
  param.name = req.body.name;
  param.phone = req.body.phone;
  param.email = req.body.email;


  const planData = stripe.plans.update(
    id,
    param,
    function(err, plan) {
        // asynchronously called
        if(err) {
            console.log(err);
            // res('REQUEST ERROR');
        } 
});

// const plan_id = planStripe.id;

  const plan = await PlanModel.findOneAndUpdate(
    { plan_id: id },
    param,
    { new: true }
  );
  if (!plan) {
    return next(new ApiErors(`not found this ${id}`, 404));
  }
  res.status(200).json({ data: plan });
});

exports.deletePlan = asyncHandler(async (req, res, next) => {
  const { id } = req.params;
  const plan = await PlanModel.findByIdAndDelete(id);
  if (!plan) {
    return next(new ApiErors(`not found this ${id}`, 404));
  }
  res.status(204).send();
});
